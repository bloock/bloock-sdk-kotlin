/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 */
object DependencyVersions {
    const val KOIN_VERSION = "2.2.0"
    const val APACHE_COMMONS_VERSION = "1.14"
    const val KT_COROUTINES_RX_VERSION = "1.4.2"
    const val KTOR_VERSION = "1.5.0"
    const val WEB3_VERSION = "4.7.0"
    const val BLAKE2B_VERSION = "1.0.0"
    const val RXJAVA_VERSION = "3.0.9"

    const val JUNIT_VERSION = "5.7.0"
}

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.3.70"

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // Kotlin
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Hashing
    implementation("com.rfksystems:blake2b:${DependencyVersions.BLAKE2B_VERSION}")

    // Utils
    implementation("org.koin:koin-core:${DependencyVersions.KOIN_VERSION}")
    implementation("commons-codec:commons-codec:${DependencyVersions.APACHE_COMMONS_VERSION}")
    implementation("io.reactivex.rxjava3:rxjava:${DependencyVersions.RXJAVA_VERSION}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-rx3:${DependencyVersions.KT_COROUTINES_RX_VERSION}")

    // Networking
    implementation("io.ktor:ktor-client-core:${DependencyVersions.KTOR_VERSION}")
    implementation("io.ktor:ktor-client-cio:${DependencyVersions.KTOR_VERSION}")
    implementation("io.ktor:ktor-client-gson:${DependencyVersions.KTOR_VERSION}")
    implementation("io.ktor:ktor-client-logging:${DependencyVersions.KTOR_VERSION}")
    implementation("io.ktor:ktor-client-auth:${DependencyVersions.KTOR_VERSION}")

    // Blockchain
    implementation("org.web3j:core:${DependencyVersions.WEB3_VERSION}")

    // Testing
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    testImplementation("io.ktor:ktor-client-mock:${DependencyVersions.KTOR_VERSION}")
    testImplementation("org.web3j:web3j-unit:${DependencyVersions.WEB3_VERSION}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${DependencyVersions.JUNIT_VERSION}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${DependencyVersions.JUNIT_VERSION}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${DependencyVersions.JUNIT_VERSION}")
}

tasks {
    "test"(Test::class) {
        useJUnitPlatform()
    }
}
