package com.enchainte.sdk.infrastructure.blockchain.contract

import org.web3j.abi.TypeReference
import org.web3j.abi.datatypes.Function
import org.web3j.abi.datatypes.Type
import org.web3j.abi.datatypes.generated.Bytes32
import org.web3j.abi.datatypes.generated.Uint256
import org.web3j.protocol.Web3j
import org.web3j.protocol.core.RemoteFunctionCall
import org.web3j.tx.Contract
import org.web3j.tx.TransactionManager
import org.web3j.tx.gas.ContractGasProvider
import java.math.BigInteger
import java.util.*

/**
 *
 * Auto generated code.
 *
 * **Do not modify!**
 *
 * Please use the [web3j command line tools](https://docs.web3j.io/command_line.html),
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * [codegen module](https://github.com/web3j/web3j/tree/master/codegen) to update.
 *
 *
 * Generated with web3j version 1.4.1.
 */
class EnchainteState protected constructor(
    contractAddress: String?,
    web3j: Web3j?,
    transactionManager: TransactionManager?,
    contractGasProvider: ContractGasProvider?
) : Contract(
    BINARY, contractAddress, web3j, transactionManager, contractGasProvider
) {

    fun getState(state_root: ByteArray?): RemoteFunctionCall<BigInteger> {
        val function = Function(
            FUNC_GETSTATE,
            Arrays.asList<Type<*>>(Bytes32(state_root)),
            Arrays.asList<TypeReference<*>>(object : TypeReference<Uint256?>() {})
        )
        return executeRemoteCallSingleValueReturn(function, BigInteger::class.java)
    }

    companion object {
        const val BINARY =
            "60806040523480156200001157600080fd5b5060405162000eff38038062000eff833981016040819052620000349162000159565b6200004160008362000075565b6200006d7f7c0c08811839d3a8bfad3f26fd05feea7daf5d75bf9d6f3fe140cd8f62b7af388262000075565b505062000190565b62000081828262000085565b5050565b6200009182826200010f565b62000081576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000cb62000138565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b80516001600160a01b03811681146200015457600080fd5b919050565b600080604083850312156200016c578182fd5b62000177836200013c565b915062000187602084016200013c565b90509250929050565b610d5f80620001a06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80632f2ff15d116100715780632f2ff15d1461014357806336568abe146101585780638ea59e1d1461016b57806391d148541461017e578063a217fddf14610191578063d547741f14610199576100b4565b806301ffc9a7146100b957806309648a9d146100e25780630aeb5fa21461010257806313bf2c97146101155780632450a4a214610128578063248a9ca314610130575b600080fd5b6100cc6100c736600461098f565b6101ac565b6040516100d991906109e2565b60405180910390f35b6100f56100f036600461093d565b6101d7565b6040516100d991906109ed565b6100f5610110366004610853565b6101e9565b6100cc61012336600461093d565b610549565b6100f561055d565b6100f561013e36600461093d565b610581565b610156610151366004610955565b610596565b005b610156610166366004610955565b6105dd565b61015661017936600461093d565b61061f565b6100cc61018c366004610955565b610678565b6100f56106a1565b6101566101a7366004610955565b6106a6565b60006001600160e01b03198216637965db0b60e01b14806101d157506101d1826106ce565b92915050565b60009081526001602052604090205490565b60008080806101f8898c610b40565b67ffffffffffffffff81111561021e57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561025757816020015b6102446107f3565b81526020019060019003908161023c5790505b50905060005b8983108061026a57508b84105b156104f7576000878761027d8787610b40565b81811061029a57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906102af91906109be565b9050600060086102bf8787610b40565b6102c99190610ce9565b6102d4906007610cad565b6102df906002610bb2565b6102ea906001610c84565b60f81b8b8b60086102fb8a8a610b40565b6103059190610b58565b81811061032257634e487b7160e01b600052603260045260246000fd5b6001600160f81b0319920135929092161615905061037f57610345856001610b40565b94508c8c610354600188610cad565b81811061037157634e487b7160e01b600052603260045260246000fd5b9050602002013590506103c0565b61038a866001610b40565b95508e8e610399600189610cad565b8181106103b657634e487b7160e01b600052603260045260246000fd5b9050602002013590505b821580159061040f575063ffffffff8216846103dd600186610cad565b815181106103fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516020015163ffffffff16145b1561049d57600084610422600186610cad565b8151811061044057634e487b7160e01b600052603260045260246000fd5b602002602001015160000151905060018461045b9190610cad565b935080826040516020016104709291906109f6565b6040516020818303038152906040528051906020012091506001836104959190610cc4565b9250506103c0565b60405180604001604052808281526020018363ffffffff168152508484815181106104d857634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104ee836001610b40565b9250505061025d565b600160008360008151811061051c57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015181526020019081526020016000205494505050505098975050505050505050565b600090815260016020526040902054151590565b7f7c0c08811839d3a8bfad3f26fd05feea7daf5d75bf9d6f3fe140cd8f62b7af3881565b60009081526020819052604090206001015490565b6105aa6105a283610581565b61018c6106e7565b6105cf5760405162461bcd60e51b81526004016105c690610a04565b60405180910390fd5b6105d982826106eb565b5050565b6105e56106e7565b6001600160a01b0316816001600160a01b0316146106155760405162461bcd60e51b81526004016105c690610af1565b6105d98282610770565b6106497f7c0c08811839d3a8bfad3f26fd05feea7daf5d75bf9d6f3fe140cd8f62b7af3833610678565b6106655760405162461bcd60e51b81526004016105c690610a53565b6000908152600160205260409020429055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b6106b26105a283610581565b6106155760405162461bcd60e51b81526004016105c690610aa1565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b6106f58282610678565b6105d9576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561072c6106e7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61077a8282610678565b156105d9576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556107af6106e7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b604080518082019091526000808252602082015290565b60008083601f84011261081b578182fd5b50813567ffffffffffffffff811115610832578182fd5b602083019150836020808302850101111561084c57600080fd5b9250929050565b6000806000806000806000806080898b03121561086e578384fd5b883567ffffffffffffffff80821115610885578586fd5b6108918c838d0161080a565b909a50985060208b01359150808211156108a9578586fd5b6108b58c838d0161080a565b909850965060408b01359150808211156108cd578586fd5b818b0191508b601f8301126108e0578586fd5b8135818111156108ee578687fd5b8c60208285010111156108ff578687fd5b6020830196508095505060608b013591508082111561091c578384fd5b506109298b828c0161080a565b999c989b5096995094979396929594505050565b60006020828403121561094e578081fd5b5035919050565b60008060408385031215610967578182fd5b8235915060208301356001600160a01b0381168114610984578182fd5b809150509250929050565b6000602082840312156109a0578081fd5b81356001600160e01b0319811681146109b7578182fd5b9392505050565b6000602082840312156109cf578081fd5b813563ffffffff811681146109b7578182fd5b901515815260200190565b90815260200190565b918252602082015260400190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b6020808252602e908201527f456e636861696e746553746174653a3a75706461746553746174653a204f4e4c60408201526d595f414c4c4f5745445f524f4c4560901b606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115610b5357610b53610cfd565b500190565b600082610b6757610b67610d13565b500490565b80825b6001808611610b7e5750610ba9565b818704821115610b9057610b90610cfd565b80861615610b9d57918102915b9490941c938002610b6f565b94509492505050565b60006109b760ff80851660ff8516600082610bcf575060016109b7565b81610bdc575060006109b7565b8160018114610bf25760028114610bfc57610c29565b60019150506109b7565b60ff841115610c0d57610c0d610cfd565b6001841b915084821115610c2357610c23610cfd565b506109b7565b5060208310610133831016604e8410600b8410161715610c5c575081810a83811115610c5757610c57610cfd565b6109b7565b610c698484846001610b6c565b808604821115610c7b57610c7b610cfd565b02949350505050565b600060ff821660ff84168160ff0481118215151615610ca557610ca5610cfd565b029392505050565b600082821015610cbf57610cbf610cfd565b500390565b600063ffffffff83811690831681811015610ce157610ce1610cfd565b039392505050565b600082610cf857610cf8610d13565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220c59d75b3749f4f043f705d9fe6eed6b78767b64eac1a04eef3d1f27f10aa269c64736f6c63430008010033"
        const val FUNC_GETSTATE = "getState"

        fun load(
            contractAddress: String?,
            web3j: Web3j?,
            transactionManager: TransactionManager?,
            contractGasProvider: ContractGasProvider?
        ): EnchainteState {
            return EnchainteState(contractAddress, web3j, transactionManager, contractGasProvider)
        }
    }
}